# Alembic Revision Generator

This script, `alembic_revision_generator.py`, is used to create autogenerated revisions using the Alembic Python API.

## Prerequisites

- Python
- Alembic

**Note:** The script uses the `alembic` package to interact with the Alembic API. You can install the package using the following command(or you can use conda to install the packages in a separate environment):

```bash
pip install alembic, sqlalchemy, sqlmodel
```

## Usage

The script requires two command line arguments:

1. `revision_message`: A string that describes the changes made in the revision.
2. `database_url`: The database connection string.


To run the script, use the following command:

```bash
python alembic_revision_generator.py <revision_message> <database_url> 
```
Example:
    
```bash
python alembic_revision_generator.py 'Add new table' 'postgresql://postgres:postgres@localhost:5432'
```
```

The script will generate a new revision file in the `backend/alembic_migrations/versions` directory.

**Note:** Before running the script, apply the changes to the database models in the `backend/app/models` directory.

**Note:** Before pushing the changes to the repository, make sure to review the generated revision files and check if they are correct.

**Note:** The script will not apply the revisions to the database automatically. Later on docker-compose will apply the changes to the database by checking the revisions using backend/app/migrate_database.py.


## How It Works

The script first checks if the required command line arguments are provided. If not, it prints the usage instructions and exits.

If the arguments are provided, it assigns them to the `revision_message`, `database_url`, variables. It then calls the `generate_autogenerated_revision` function with these variables as arguments.

The `generate_autogenerated_revision` function uses the Alembic Python API to generate the revision scripts for the specified database.

```
